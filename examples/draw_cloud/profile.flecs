// To see what the result of parsing this file looks like, copy the code and
// paste it into the editor at https://flecs.dev/explorer
//
// To load this file yourself, call ecs_plecs_from_file("expressions.flecs");
using flecs.meta

window1 {
    - windows.Window{"Hello cool title!"}
}

camera1 {
    - cameras.Camera{moving_speed:10.0, looking_speed:1.0}
    - geometries.Position3
}


render_points : renderings.pipes.points {
	- draw.points.Desc{cap:1000*1000}
}

sensor1 {
    //- sensors.SensorsDesc{metafile:"/home/johan/OS16_RNG15_RFL8_NIR8.json", radius_filter:100.0}OS16_RNG19_RFL8_SIG16_NIR16
    //- sensors.SensorsDesc{metafile:"/home/johan/OS16_RNG19_RFL8_SIG16_NIR16.json", radius_filter:100.0}
    //- sensors.SensorsDesc{metafile:"/home/johan/Downloads/nowcap/a.json", radius_filter:100.0}
    - sensors.SensorsDesc{metafile:"/home/johan/Downloads/OS1_Captures_128/a.json", radius_filter:100.0}
}

draw_sensor : window1, camera1, render_points, sensor1 {
	//- pointclouds.Pointcloud{cap: 1024*128}
}




text1 {
    - draw.text.Text{""}
    - geometries.Position2{0,0}
}





//ins1 : shape1 {- geometries.GeometriesInstances}


render_instances1 : renderings.pipes.instances, shapes.vbuf1 {
    - draw.instances.Desc{cap: 1000*1000}
}

draw_instance0 : camera1, render_instances1, window1, shapes.shape1 {
    - geometries.Position3{10,10,10}
}

draw_instance1 : camera1, render_instances1, window1, shapes.shape2 {
    - geometries.Position3{10,10,-10}
}





render_shapes1 : renderings.pipes.shapes, shapes.vbuf1 {
    - draw.shapes.Desc{cap: 1000*1000}
}


draw_shape1 : camera1, render_shapes1, window1, shapes.shape2 {
    - geometries.Position3{0,0,0}
}

draw_shape2 : camera1, render_shapes1, window1, shapes.shape3 {
    - geometries.Position3{0,1,0}
}
